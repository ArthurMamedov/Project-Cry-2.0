#pragma once
#include <cstring>
#include "ICore.hpp"

class GostCore final : public ICore {
private:
	uint32_t _round_keys[8];
	uint8_t _sbox[8][16] = {
		{0xF, 0xC, 0x2, 0xA, 0x6, 0x4, 0x5, 0x0, 0x7, 0x9, 0xE, 0xD, 0x1, 0xB, 0x8, 0x3},
		{0xB, 0x6, 0x3, 0x4, 0xC, 0xF, 0xE, 0x2, 0x7, 0xD, 0x8, 0x0, 0x5, 0xA, 0x9, 0x1},
		{0x1, 0xC, 0xB, 0x0, 0xF, 0xE, 0x6, 0x5, 0xA, 0xD, 0x4, 0x8, 0x9, 0x3, 0x7, 0x2},
		{0x1, 0x5, 0xE, 0xC, 0xA, 0x7, 0x0, 0xD, 0x6, 0x2, 0xB, 0x4, 0x9, 0x3, 0xF, 0x8},
		{0x0, 0xC, 0x8, 0x9, 0xD, 0x2, 0xA, 0xB, 0x7, 0x3, 0x6, 0x5, 0x4, 0xE, 0xF, 0x1},
		{0x8, 0x0, 0xF, 0x3, 0x2, 0x5, 0xE, 0xB, 0x1, 0xA, 0x4, 0x7, 0xC, 0x9, 0xD, 0x6},
		{0x3, 0x0, 0x6, 0xF, 0x1, 0xE, 0x9, 0x2, 0xD, 0x8, 0xC, 0x4, 0xB, 0xA, 0x5, 0x7},
		{0x1, 0xA, 0x6, 0x8, 0xF, 0xB, 0x0, 0x4, 0xC, 0x3, 0x5, 0x9, 0x7, 0xD, 0x2, 0xE},
	};
	inline auto _round(uint32_t* block32b_1, uint32_t* block32b_2, uint8_t i) -> void;
	inline auto _substitution_table(uint32_t block32b, uint8_t sbox_row) -> uint32_t;
	inline auto _substitution_table_by_4bits(uint8_t* blocks4b, uint8_t sbox_row) -> void;
	inline auto _join_4bits_to_32bits(uint8_t* blocks4b) -> uint32_t;
	inline auto _split_32bits_to_8bits(uint32_t block32b, uint8_t* blocks8b) -> void;
	inline auto _split_256bits_to_32bits(const char* key256b) -> void;
	inline auto _2_32bits_blocks_to_64_block(uint32_t N1, uint32_t N2, uint8_t block[8]) -> void;
	inline auto _64bits_block_to_2_32bit_blocks(const uint8_t block[8], uint32_t& N1, uint32_t& N2) -> void;
	
public:
	GostCore() = default;
	GostCore(const char* key);
	GostCore(const GostCore& gost);

	auto cry_round(uint8_t* block) -> void override;
	auto inv_cry_round(uint8_t* block) -> void override;
	auto set_substitution_tables(const uint8_t** sbox, const uint8_t** inv_sbox) -> void override;
	auto get_block_length() -> size_t override;
	auto set_key(const char* key) -> void override;
	size_t get_key_length() override;
};
